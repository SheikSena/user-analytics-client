[{"D:\\Personal\\Projects\\user-analytics-client\\src\\index.js":"1","D:\\Personal\\Projects\\user-analytics-client\\src\\App.js":"2","D:\\Personal\\Projects\\user-analytics-client\\src\\reportWebVitals.js":"3","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Login.js":"4","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Register.js":"5","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Header.js":"6","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Footer.js":"7","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Sidebar.js":"8","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Home.js":"9"},{"size":517,"mtime":1607093741066,"results":"10","hashOfConfig":"11"},{"size":360,"mtime":1607173474247,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1607093741066,"results":"13","hashOfConfig":"11"},{"size":3297,"mtime":1607176906262,"results":"14","hashOfConfig":"11"},{"size":4666,"mtime":1607176815177,"results":"15","hashOfConfig":"11"},{"size":1281,"mtime":1607175125191,"results":"16","hashOfConfig":"11"},{"size":558,"mtime":1607109516423,"results":"17","hashOfConfig":"18"},{"size":2066,"mtime":1607175607198,"results":"19","hashOfConfig":"11"},{"size":577,"mtime":1607172532303,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"u8eltj",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1m4wsbz",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"D:\\Personal\\Projects\\user-analytics-client\\src\\index.js",[],["42","43"],"D:\\Personal\\Projects\\user-analytics-client\\src\\App.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\reportWebVitals.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Login.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Register.js",["44"],"import React, { useState } from 'react';\r\nimport { Card, Button, Form, Col, Toast, Spinner, Row, Breadcrumb } from 'react-bootstrap'\r\nimport { CheckSquareFill } from 'react-bootstrap-icons';\r\n\r\nexport default function Register() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [butttonDisable, setButtonDisable] = useState(false);\r\n    const [spinnerDisable, setSpinnerDisable] = useState(false);\r\n    const [blockScreen, setBlockScreen] = useState('');\r\n\r\n    function register() {\r\n        setShow(true)\r\n        setButtonDisable(true)\r\n        setSpinnerDisable(true)\r\n        setBlockScreen(\"parentDisable\")\r\n    }\r\n\r\n    return (\r\n        <div style={{ backgroundColor: 'white', height: '100%', paddingTop: '10px', paddingRight: '10px' }}>\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item active>Register</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <Card bg=\"light\" text=\"dark\">\r\n                <Card.Header className=\"text-center\">REGISTER</Card.Header>\r\n                <Card.Body>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Group controlId=\"formGridAddress1\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control placeholder=\"1234 Main St\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGridAddress2\">\r\n                            <Form.Label>Address 2</Form.Label>\r\n                            <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n                        </Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                <Form.Label>City</Form.Label>\r\n                                <Form.Control />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridState\">\r\n                                <Form.Label>State</Form.Label>\r\n                                <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n                                    <option>Choose...</option>\r\n                                    <option>...</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                <Form.Label>Zip</Form.Label>\r\n                                <Form.Control />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Group id=\"formGridCheckbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\">\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={butttonDisable} onClick={register}>REGISTER</Button>\r\n                </Card.Footer>\r\n            </Card>\r\n            <div style={{ position: 'absolute', top: 60, right: 14 }} >\r\n                <Toast show={show} autohide onClose={() => setShow(false)} delay={5000} closeButton>\r\n                    <Toast.Header>\r\n                        <CheckSquareFill fill=\"green\" /> &nbsp;&nbsp;\r\n                        <strong className=\"mr-auto\" >Success</strong> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <small>just now</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>Logged-In Successfully</Toast.Body>\r\n                </Toast>\r\n            </div>\r\n            <div className={blockScreen} width=\"100%\"></div>\r\n            { spinnerDisable ? <Spinner as=\"span\" animation=\"border\" size=\"lg\" role=\"status\" aria-hidden=\"true\" style={{ \"position\": \"fixed\", \"top\": \"50%\", \"left\": \"50%\" }} /> : null}\r\n\r\n        </div >\r\n    );\r\n}","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Header.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Footer.js",[],["45","46"],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Sidebar.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Home.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":51,"nodeType":"53","messageId":"54","endLine":2,"endColumn":54},{"ruleId":"47","replacedBy":"55"},{"ruleId":"49","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar",["57"],["58"],"no-global-assign","no-unsafe-negation"]