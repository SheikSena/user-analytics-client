[{"D:\\Personal\\Projects\\user-analytics-client\\src\\index.js":"1","D:\\Personal\\Projects\\user-analytics-client\\src\\App.js":"2","D:\\Personal\\Projects\\user-analytics-client\\src\\reportWebVitals.js":"3","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Login.js":"4","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Register.js":"5","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Header.js":"6","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Footer.js":"7","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Sidebar.js":"8","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Home.js":"9"},{"size":517,"mtime":1607093741066,"results":"10","hashOfConfig":"11"},{"size":360,"mtime":1607173474247,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1607093741066,"results":"13","hashOfConfig":"11"},{"size":3207,"mtime":1607172140458,"results":"14","hashOfConfig":"11"},{"size":6859,"mtime":1607111142676,"results":"15","hashOfConfig":"11"},{"size":1281,"mtime":1607172858327,"results":"16","hashOfConfig":"11"},{"size":558,"mtime":1607109516423,"results":"17","hashOfConfig":"11"},{"size":2489,"mtime":1607174397523,"results":"18","hashOfConfig":"11"},{"size":577,"mtime":1607172532303,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m4wsbz",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Personal\\Projects\\user-analytics-client\\src\\index.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\App.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\reportWebVitals.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Login.js",["40","41","42"],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Register.js",["43","44","45","46","47","48"],"import React, { useState } from 'react';\r\nimport { Card, Button, Form, Row, Col, Image, Container, Toast, Spinner, Jumbotron } from 'react-bootstrap'\r\nimport { CheckSquareFill } from 'react-bootstrap-icons';\r\n\r\nexport default function Register() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [butttonDisable, setButtonDisable] = useState(false);\r\n    const [spinnerDisable, setSpinnerDisable] = useState(false);\r\n    const [blockScreen, setBlockScreen] = useState('');\r\n\r\n    function login() {\r\n        setShow(true)\r\n        setButtonDisable(true)\r\n        setSpinnerDisable(true)\r\n        setBlockScreen(\"parentDisable\")\r\n    }\r\n\r\n    return (\r\n        <div style={{ backgroundColor: 'white', overflowY: 'auto' }}>\r\n            <div>\r\n                <Card\r\n                    bg=\"light\"\r\n                    key=\"\"\r\n                    text=\"dark\"\r\n                >\r\n                    <Card.Header className=\"text-center\">LOGIN</Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Group controlId=\"formGridAddress1\">\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control placeholder=\"1234 Main St\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formGridAddress2\">\r\n                                <Form.Label>Address 2</Form.Label>\r\n                                <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                    <Form.Label>City</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridState\">\r\n                                    <Form.Label>State</Form.Label>\r\n                                    <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Choose...</option>\r\n                                        <option>...</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                    <Form.Label>Zip</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                    <Form.Label>City</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridState\">\r\n                                    <Form.Label>State</Form.Label>\r\n                                    <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Choose...</option>\r\n                                        <option>...</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                    <Form.Label>Zip</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                    <Form.Label>City</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridState\">\r\n                                    <Form.Label>State</Form.Label>\r\n                                    <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Choose...</option>\r\n                                        <option>...</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                    <Form.Label>Zip</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Group id=\"formGridCheckbox\">\r\n                                <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n  </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\r\n                </Card>\r\n            </div>\r\n            <div style={{ position: 'absolute', top: 60, right: 14 }} >\r\n                <Toast show={show} autohide onClose={() => setShow(false)} delay={5000} closeButton>\r\n                    <Toast.Header>\r\n                        <CheckSquareFill fill=\"green\" /> &nbsp;&nbsp;\r\n                        <strong className=\"mr-auto\" >Success</strong> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <small>just now</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>Logged-In Successfully</Toast.Body>\r\n                </Toast>\r\n            </div>\r\n            <div className={blockScreen} width=\"100%\"></div>\r\n            { spinnerDisable ? <Spinner as=\"span\" animation=\"border\" size=\"lg\" role=\"status\" aria-hidden=\"true\" style={{ \"position\": \"fixed\", \"top\": \"50%\", \"left\": \"50%\" }} /> : null}\r\n        </div >\r\n    );\r\n}",["49","50"],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Header.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Footer.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Sidebar.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Home.js",[],{"ruleId":"51","severity":1,"message":"52","line":2,"column":47,"nodeType":"53","messageId":"54","endLine":2,"endColumn":56},{"ruleId":"51","severity":1,"message":"55","line":2,"column":74,"nodeType":"53","messageId":"54","endLine":2,"endColumn":83},{"ruleId":"51","severity":1,"message":"56","line":8,"column":28,"nodeType":"53","messageId":"54","endLine":8,"endColumn":44},{"ruleId":"51","severity":1,"message":"57","line":2,"column":30,"nodeType":"53","messageId":"54","endLine":2,"endColumn":33},{"ruleId":"51","severity":1,"message":"58","line":2,"column":40,"nodeType":"53","messageId":"54","endLine":2,"endColumn":45},{"ruleId":"51","severity":1,"message":"52","line":2,"column":47,"nodeType":"53","messageId":"54","endLine":2,"endColumn":56},{"ruleId":"51","severity":1,"message":"55","line":2,"column":74,"nodeType":"53","messageId":"54","endLine":2,"endColumn":83},{"ruleId":"51","severity":1,"message":"59","line":8,"column":12,"nodeType":"53","messageId":"54","endLine":8,"endColumn":26},{"ruleId":"51","severity":1,"message":"60","line":12,"column":14,"nodeType":"53","messageId":"54","endLine":12,"endColumn":19},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Jumbotron' is defined but never used.","'setButtonDisable' is assigned a value but never used.","'Row' is defined but never used.","'Image' is defined but never used.","'butttonDisable' is assigned a value but never used.","'login' is defined but never used.","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-global-assign","no-unsafe-negation"]