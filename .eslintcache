[{"D:\\Personal\\Projects\\user-analytics-client\\src\\index.js":"1","D:\\Personal\\Projects\\user-analytics-client\\src\\App.js":"2","D:\\Personal\\Projects\\user-analytics-client\\src\\reportWebVitals.js":"3","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Login.js":"4","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Register.js":"5","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Header.js":"6","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Footer.js":"7","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Sidebar.js":"8","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Home.js":"9"},{"size":517,"mtime":1607093741066,"results":"10","hashOfConfig":"11"},{"size":654,"mtime":1607112264588,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1607093741066,"results":"13","hashOfConfig":"11"},{"size":3222,"mtime":1607109783687,"results":"14","hashOfConfig":"11"},{"size":6859,"mtime":1607111142676,"results":"15","hashOfConfig":"11"},{"size":1276,"mtime":1607111322078,"results":"16","hashOfConfig":"11"},{"size":558,"mtime":1607109516423,"results":"17","hashOfConfig":"11"},{"size":1070,"mtime":1607111929068,"results":"18","hashOfConfig":"11"},{"size":614,"mtime":1607111549821,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1m4wsbz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Personal\\Projects\\user-analytics-client\\src\\index.js",[],["41","42"],"D:\\Personal\\Projects\\user-analytics-client\\src\\App.js",["43","44"],"D:\\Personal\\Projects\\user-analytics-client\\src\\reportWebVitals.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Login.js",["45","46"],"import React, { useState } from 'react';\r\nimport { Card, Button, Form, Row, Col, Image, Container, Toast, Spinner, Jumbotron } from 'react-bootstrap'\r\nimport { CheckSquareFill } from 'react-bootstrap-icons';\r\n\r\nexport default function Login() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [butttonDisable, setButtonDisable] = useState(false);\r\n    const [spinnerDisable, setSpinnerDisable] = useState(false);\r\n    const [blockScreen, setBlockScreen] = useState('');\r\n\r\n    function login() {\r\n        setShow(true)\r\n        //setButtonDisable(true)\r\n        setSpinnerDisable(true)\r\n        setBlockScreen(\"parentDisable\")\r\n    }\r\n\r\n    return (\r\n        <Jumbotron style={{ backgroundColor: 'white', height: '100%' }} >\r\n            <Card\r\n                bg=\"light\"\r\n                text=\"dark\"\r\n            >\r\n                <Card.Header className=\"text-center\">LOGIN</Card.Header>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col xs={6}>\r\n                            <Image src=\"https://i.pinimg.com/originals/3f/3d/d9/3f3dd9219f7bb1c9617cf4f154b70383.jpg\" rounded width=\"500\" height=\"300\" />\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <Form>\r\n                                <Form.Group controlId=\"formGroupEmail\">\r\n                                    <Form.Label>Email address </Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formGroupPassword\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                                </Form.Group>\r\n                            </Form>\r\n                            <Button variant=\"primary\" onClick={login} type=\"submit\" disabled={butttonDisable}>\r\n                                LOGIN\r\n                        </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\r\n            </Card>\r\n            <div style={{ position: 'absolute', top: 60, right: 14 }} >\r\n                <Toast show={show} autohide onClose={() => setShow(false)} delay={5000} closeButton>\r\n                    <Toast.Header>\r\n                        <CheckSquareFill fill=\"green\" /> &nbsp;&nbsp;\r\n                        <strong className=\"mr-auto\" >Success</strong> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <small>just now</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>Logged-In Successfully</Toast.Body>\r\n                </Toast>\r\n            </div>\r\n            <div className={blockScreen} width=\"100%\"></div>\r\n            {spinnerDisable ? <Spinner as=\"span\" animation=\"border\" size=\"lg\" role=\"status\" aria-hidden=\"true\" style={{ \"position\": \"fixed\", \"top\": \"50%\", \"left\": \"50%\" }} /> : null}\r\n        </Jumbotron>\r\n    );\r\n}","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Register.js",["47","48","49","50","51","52"],"import React, { useState } from 'react';\r\nimport { Card, Button, Form, Row, Col, Image, Container, Toast, Spinner, Jumbotron } from 'react-bootstrap'\r\nimport { CheckSquareFill } from 'react-bootstrap-icons';\r\n\r\nexport default function Register() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [butttonDisable, setButtonDisable] = useState(false);\r\n    const [spinnerDisable, setSpinnerDisable] = useState(false);\r\n    const [blockScreen, setBlockScreen] = useState('');\r\n\r\n    function login() {\r\n        setShow(true)\r\n        setButtonDisable(true)\r\n        setSpinnerDisable(true)\r\n        setBlockScreen(\"parentDisable\")\r\n    }\r\n\r\n    return (\r\n        <div style={{ backgroundColor: 'white', overflowY: 'auto' }}>\r\n            <div>\r\n                <Card\r\n                    bg=\"light\"\r\n                    key=\"\"\r\n                    text=\"dark\"\r\n                >\r\n                    <Card.Header className=\"text-center\">LOGIN</Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Group controlId=\"formGridAddress1\">\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control placeholder=\"1234 Main St\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formGridAddress2\">\r\n                                <Form.Label>Address 2</Form.Label>\r\n                                <Form.Control placeholder=\"Apartment, studio, or floor\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                    <Form.Label>City</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridState\">\r\n                                    <Form.Label>State</Form.Label>\r\n                                    <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Choose...</option>\r\n                                        <option>...</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                    <Form.Label>Zip</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                    <Form.Label>City</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridState\">\r\n                                    <Form.Label>State</Form.Label>\r\n                                    <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Choose...</option>\r\n                                        <option>...</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                    <Form.Label>Zip</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                    <Form.Label>City</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridState\">\r\n                                    <Form.Label>State</Form.Label>\r\n                                    <Form.Control as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Choose...</option>\r\n                                        <option>...</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                    <Form.Label>Zip</Form.Label>\r\n                                    <Form.Control />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Group id=\"formGridCheckbox\">\r\n                                <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n  </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\r\n                </Card>\r\n            </div>\r\n            <div style={{ position: 'absolute', top: 60, right: 14 }} >\r\n                <Toast show={show} autohide onClose={() => setShow(false)} delay={5000} closeButton>\r\n                    <Toast.Header>\r\n                        <CheckSquareFill fill=\"green\" /> &nbsp;&nbsp;\r\n                        <strong className=\"mr-auto\" >Success</strong> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <small>just now</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>Logged-In Successfully</Toast.Body>\r\n                </Toast>\r\n            </div>\r\n            <div className={blockScreen} width=\"100%\"></div>\r\n            { spinnerDisable ? <Spinner as=\"span\" animation=\"border\" size=\"lg\" role=\"status\" aria-hidden=\"true\" style={{ \"position\": \"fixed\", \"top\": \"50%\", \"left\": \"50%\" }} /> : null}\r\n        </div >\r\n    );\r\n}","D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Header.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Footer.js",[],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Sidebar.js",["53","54","55","56","57","58"],"D:\\Personal\\Projects\\user-analytics-client\\src\\components\\Home.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":14},{"ruleId":"63","severity":1,"message":"67","line":7,"column":20,"nodeType":"65","messageId":"66","endLine":7,"endColumn":29},{"ruleId":"63","severity":1,"message":"67","line":2,"column":47,"nodeType":"65","messageId":"66","endLine":2,"endColumn":56},{"ruleId":"63","severity":1,"message":"68","line":8,"column":28,"nodeType":"65","messageId":"66","endLine":8,"endColumn":44},{"ruleId":"63","severity":1,"message":"69","line":2,"column":30,"nodeType":"65","messageId":"66","endLine":2,"endColumn":33},{"ruleId":"63","severity":1,"message":"70","line":2,"column":40,"nodeType":"65","messageId":"66","endLine":2,"endColumn":45},{"ruleId":"63","severity":1,"message":"67","line":2,"column":47,"nodeType":"65","messageId":"66","endLine":2,"endColumn":56},{"ruleId":"63","severity":1,"message":"71","line":2,"column":74,"nodeType":"65","messageId":"66","endLine":2,"endColumn":83},{"ruleId":"63","severity":1,"message":"72","line":8,"column":12,"nodeType":"65","messageId":"66","endLine":8,"endColumn":26},{"ruleId":"63","severity":1,"message":"73","line":12,"column":14,"nodeType":"65","messageId":"66","endLine":12,"endColumn":19},{"ruleId":"63","severity":1,"message":"74","line":4,"column":27,"nodeType":"65","messageId":"66","endLine":4,"endColumn":33},{"ruleId":"63","severity":1,"message":"75","line":4,"column":35,"nodeType":"65","messageId":"66","endLine":4,"endColumn":41},{"ruleId":"63","severity":1,"message":"76","line":4,"column":43,"nodeType":"65","messageId":"66","endLine":4,"endColumn":48},{"ruleId":"63","severity":1,"message":"77","line":4,"column":50,"nodeType":"65","messageId":"66","endLine":4,"endColumn":54},{"ruleId":"63","severity":1,"message":"78","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":13},{"ruleId":"63","severity":1,"message":"79","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":16},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'setButtonDisable' is assigned a value but never used.","'Row' is defined but never used.","'Image' is defined but never used.","'Jumbotron' is defined but never used.","'butttonDisable' is assigned a value but never used.","'login' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","no-global-assign","no-unsafe-negation"]